npm install react-router-dom formik yup

// PersonComponent.jsx
import React from 'react';

const PersonComponent = ({ person }) => {
  return (
    <div style={{ border: '1px solid #ccc', padding: '10px', margin: '10px', borderRadius: '5px' }}>
      <h3>{person.name}</h3>
      <p>Возраст: {person.age}</p>
      <p>Email: {person.email}</p>
      <h4>Питомцы:</h4>
      <ul>
        {person.pet.map((pet, index) => (
          <li key={index}>
            {pet.name}, возраст: {pet.age}
          </li>
        ))}
      </ul>
    </div>
  );
};

export default PersonComponent;

// PersonForm.jsx
import { Formik, Form, Field, ErrorMessage } from 'formik';
import * as Yup from 'yup';

const PersonForm = ({ addPerson }) => {
  const initialValues = {
    name: '',
    age: '',
    email: '',
    pets: [{ name: '', age: '' }]
  };

  const validationSchema = Yup.object().shape({
    name: Yup.string().required('Обязательное поле'),
    age: Yup.number()
      .required('Обязательное поле')
      .positive('Возраст должен быть положительным')
      .integer('Возраст должен быть целым числом'),
    email: Yup.string().email('Некорректный email').required('Обязательное поле'),
    pets: Yup.array().of(
      Yup.object().shape({
        name: Yup.string().required('Имя питомца обязательно'),
        age: Yup.number()
          .required('Возраст питомца обязателен')
          .positive('Возраст должен быть положительным')
          .integer('Возраст должен быть целым числом')
      })
    )
  });

  const handleSubmit = (values, { resetForm }) => {
    const newPerson = {
      name: values.name,
      age: values.age,
      email: values.email,
      pet: values.pets
    };
    addPerson(newPerson);
    resetForm();
  };

  return (
    <Formik
      initialValues={initialValues}
      validationSchema={validationSchema}
      onSubmit={handleSubmit}
    >
      {({ values }) => (
        <Form>
          <div>
            <label>Имя:</label>
            <Field type="text" name="name" />
            <ErrorMessage name="name" component="div" className="error" />
          </div>

          <div>
            <label>Возраст:</label>
            <Field type="number" name="age" />
            <ErrorMessage name="age" component="div" className="error" />
          </div>

          <div>
            <label>Email:</label>
            <Field type="email" name="email" />
            <ErrorMessage name="email" component="div" className="error" />
          </div>

          <h4>Питомцы:</h4>
          {values.pets.map((pet, index) => (
            <div key={index}>
              <div>
                <label>Имя питомца:</label>
                <Field type="text" name={`pets.${index}.name`} />
                <ErrorMessage name={`pets.${index}.name`} component="div" className="error" />
              </div>

              <div>
                <label>Возраст питомца:</label>
                <Field type="number" name={`pets.${index}.age`} />
                <ErrorMessage name={`pets.${index}.age`} component="div" className="error" />
              </div>
            </div>
          ))}

          <button type="button" onClick={() => {
            values.pets.push({ name: '', age: '' });
          }}>
            Добавить питомца
          </button>

          <button type="submit">Добавить человека</button>
        </Form>
      )}
    </Formik>
  );
};

export default PersonForm;

// App.jsx
import React, { useState } from 'react';
import { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';
import PersonForm from './PersonForm';
import PersonComponent from './PersonComponent';

const App = () => {
  const [people, setPeople] = useState([]);

  const addPerson = (newPerson) => {
    setPeople([...people, newPerson]);
  };

  return (
    <Router>
      <div>
        <nav>
          <ul style={{ listStyle: 'none', display: 'flex', gap: '20px' }}>
            <li>
              <Link to="/">Форма</Link>
            </li>
            <li>
              <Link to="/people">Список людей</Link>
            </li>
          </ul>
        </nav>

        <Routes>
          <Route path="/" element={<PersonForm addPerson={addPerson} />} />
          <Route
            path="/people"
            element={
              <div>
                <h2>Список людей</h2>
                {people.map((person, index) => (
                  <PersonComponent key={index} person={person} />
                ))}
              </div>
            }
          />
        </Routes>
      </div>
    </Router>
  );
};

export default App;

/* App.css */
.error {
  color: red;
  font-size: 0.8em;
}

form div {
  margin-bottom: 10px;
}

label {
  display: block;
  margin-bottom: 5px;
}

input {
  padding: 5px;
  width: 200px;
}

button {
  margin-top: 10px;
  padding: 5px 10px;
  cursor: pointer;
}

//index.js
import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';
import './App.css';

ReactDOM.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
  document.getElementById('root')
);
